type Claim @entity {
  id: ID!
  user: User!
  token: Token!
  amount: BigInt!
  cycle: Cycle!
  timestamp: BigInt!
  blockNumber: BigInt!
}

type Token @entity {
  id: ID!
  decimals: BigInt!
  name: String!
  symbol: String!
}

type TokenBalance @entity {
  id: ID!
  token: Token!
  amount: BigInt!
  user: User!
}

type User @entity {
  id: ID!
  balances: [TokenBalance!]! @derivedFrom(field: "user")
  claims: [Claim!]! @derivedFrom(field: "user")
}

interface TreeAction @entity {
  id: ID!
  cycle: Cycle!
  root: String!
  contentHash: String!
  startBlock: BigInt!
  endBlock: BigInt!
}

type Cycle @entity {
  id: ID!
  claims: [Claim!]! @derivedFrom(field: "cycle")
  root: String!
  contentHash: String!
  startBlock: BigInt!
  endBlock: BigInt!
}
type UnlockSchedule @entity {
  id: ID!
  vault: String!
  token: Token!
  amount: BigInt!
  start: BigInt!
  end: BigInt!
  duration: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
}
